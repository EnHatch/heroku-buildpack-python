#!/usr/bin/env bash
VENDORED_FFMPEG="http://ffmpeg.org/releases/ffmpeg-2.7.tar.bz2"

PKG_CONFIG_PATH="/app/.heroku/vendor/lib/pkgconfig:$PKG_CONFIG_PATH"

# Syntax sugar.
source $BIN_DIR/utils

bpwatch start ffmpeg_install

# If GDAL exists within requirements, use vendored gdal.
if (pip-grep -s requirements.txt av &> /dev/null) then

  if [ -d ".heroku/vendor/bin/ffmpeg" ]; then
    export FFMPEG=$(pwd)/vendor
  else
    echo "-----> Noticed PyAV. Bootstrapping ffmpeg."
    mkdir -p .heroku/vendor
    # Download and extract cryptography into target vendor directory.
    curl $VENDORED_FFMPEG -s | tar jxv -C .heroku/vendor &> /dev/null

    cd .heroku/vendor/ffmpeg-2.7

    ./configure --prefix=/app/.heroku/vendor/ffmpeg --disable-static --enable-shared --disable-doc
	
	make
	make install

	cd ../../

	rm -rf ffmpeg-2.7

	cd ../

	set-env PATH '$PATH:$HOME/.heroku/vendor/ffmpeg/bin'
	set-env LIBRARY_PATH '$LIBRARY_PATH:$HOME/.heroku/vendor/ffmpeg/lib'
	set-env LD_LIBRARY_PATH '$LD_LIBRARY_PATH:$HOME/.heroku/vendor/ffmpeg/lib'
	set-env PKG_CONFIG_PATH '$PKG_CONFIG_PATH:$HOME/.heroku/vendor/ffmpeg/lib/pkgconfig'

	echo $PKG_CONFIG_PATH
	echo $LD_LIBRARY_PATH

	export PATH=$PATH:$HOME/.heroku/vendor/ffmpeg/bin
	export LIBRARY_PATH=$LIBRARY_PATH:$HOME/.heroku/vendor/ffmpeg/lib
	export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/.heroku/vendor/ffmpeg/lib
	export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$HOME/.heroku/vendor/ffmpeg/lib/pkgconfig

    export FFMPEG=$(pwd)/vendor
  fi
fi

bpwatch stop ffmpeg_install
